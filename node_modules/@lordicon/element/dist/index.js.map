{"version":3,"file":"index.js","sources":["../../helpers/dist/index.js","../src/element.ts","../src/player.ts","../src/triggers/boomerang.ts","../src/triggers/click.ts","../src/triggers/hover.ts","../src/triggers/in.ts","../src/triggers/loop.ts","../src/triggers/loop-on-hover.ts","../src/triggers/morph.ts","../src/triggers/sequence.ts","../src/index.ts"],"sourcesContent":["function e(e){return JSON.parse(JSON.stringify(e))}function f(e){return null==e}function r(e){return null!==e&&\"object\"==typeof e}function n(e,f){const n=Array.isArray(f)?f:f.split(\".\");let a=e;for(const e of n){if(!r(a))return!1;if(!(e in a))return!1;a=a[e]}return!0}function a(e,f,n){const a=Array.isArray(f)?f:f.split(\".\");let t=e;for(const e of a){if(!r(t))return n;if(!(e in t))return n;t=t[e]}return void 0===t?n:t}function t(e,f,r){let n=e;const a=Array.isArray(f)?f:f.split(\".\");for(let e=0;e<a.length;++e)e===a.length-1?n[a[e]]=r:n=n[a[e]]}const o={aliceblue:\"#f0f8ff\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",aquamarine:\"#7fffd4\",azure:\"#f0ffff\",beige:\"#f5f5dc\",bisque:\"#ffe4c4\",black:\"#000000\",blanchedalmond:\"#ffebcd\",blue:\"#0000ff\",blueviolet:\"#8a2be2\",brown:\"#a52a2a\",burlywood:\"#deb887\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",cornflowerblue:\"#6495ed\",cornsilk:\"#fff8dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkgray:\"#a9a9a9\",darkgreen:\"#006400\",darkkhaki:\"#bdb76b\",darkmagenta:\"#8b008b\",darkolivegreen:\"#556b2f\",darkorange:\"#ff8c00\",darkorchid:\"#9932cc\",darkred:\"#8b0000\",darksalmon:\"#e9967a\",darkseagreen:\"#8fbc8f\",darkslateblue:\"#483d8b\",darkslategray:\"#2f4f4f\",darkturquoise:\"#00ced1\",darkviolet:\"#9400d3\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",dimgray:\"#696969\",dodgerblue:\"#1e90ff\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",forestgreen:\"#228b22\",fuchsia:\"#ff00ff\",gainsboro:\"#dcdcdc\",ghostwhite:\"#f8f8ff\",gold:\"#ffd700\",goldenrod:\"#daa520\",gray:\"#808080\",green:\"#008000\",greenyellow:\"#adff2f\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",\"indianred \":\"#cd5c5c\",indigo:\"#4b0082\",ivory:\"#fffff0\",khaki:\"#f0e68c\",lavender:\"#e6e6fa\",lavenderblush:\"#fff0f5\",lawngreen:\"#7cfc00\",lemonchiffon:\"#fffacd\",lightblue:\"#add8e6\",lightcoral:\"#f08080\",lightcyan:\"#e0ffff\",lightgoldenrodyellow:\"#fafad2\",lightgrey:\"#d3d3d3\",lightgreen:\"#90ee90\",lightpink:\"#ffb6c1\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",lightskyblue:\"#87cefa\",lightslategray:\"#778899\",lightsteelblue:\"#b0c4de\",lightyellow:\"#ffffe0\",lime:\"#00ff00\",limegreen:\"#32cd32\",linen:\"#faf0e6\",magenta:\"#ff00ff\",maroon:\"#800000\",mediumaquamarine:\"#66cdaa\",mediumblue:\"#0000cd\",mediumorchid:\"#ba55d3\",mediumpurple:\"#9370d8\",mediumseagreen:\"#3cb371\",mediumslateblue:\"#7b68ee\",mediumspringgreen:\"#00fa9a\",mediumturquoise:\"#48d1cc\",mediumvioletred:\"#c71585\",midnightblue:\"#191970\",mintcream:\"#f5fffa\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",navajowhite:\"#ffdead\",navy:\"#000080\",oldlace:\"#fdf5e6\",olive:\"#808000\",olivedrab:\"#6b8e23\",orange:\"#ffa500\",orangered:\"#ff4500\",orchid:\"#da70d6\",palegoldenrod:\"#eee8aa\",palegreen:\"#98fb98\",paleturquoise:\"#afeeee\",palevioletred:\"#d87093\",papayawhip:\"#ffefd5\",peachpuff:\"#ffdab9\",peru:\"#cd853f\",pink:\"#ffc0cb\",plum:\"#dda0dd\",powderblue:\"#b0e0e6\",purple:\"#800080\",rebeccapurple:\"#663399\",red:\"#ff0000\",rosybrown:\"#bc8f8f\",royalblue:\"#4169e1\",saddlebrown:\"#8b4513\",salmon:\"#fa8072\",sandybrown:\"#f4a460\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",sienna:\"#a0522d\",silver:\"#c0c0c0\",skyblue:\"#87ceeb\",slateblue:\"#6a5acd\",slategray:\"#708090\",snow:\"#fffafa\",springgreen:\"#00ff7f\",steelblue:\"#4682b4\",tan:\"#d2b48c\",teal:\"#008080\",thistle:\"#d8bfd8\",tomato:\"#ff6347\",turquoise:\"#40e0d0\",violet:\"#ee82ee\",wheat:\"#f5deb3\",white:\"#ffffff\",whitesmoke:\"#f5f5f5\",yellow:\"#ffff00\",yellowgreen:\"#9acd32\"};function i(e){return e.startsWith(\"#\")?4===e.length?`#${e[1]}${e[1]}${e[2]}${e[2]}${e[3]}${e[3]}`:e:o[e.toLowerCase()]||\"#000000\"}function l(e){if(!e||\"string\"!=typeof e)return;return e.split(\",\").filter((e=>e)).map((e=>e.split(\":\"))).filter((e=>2==e.length)).reduce(((e,f)=>(e[f[0].toLowerCase()]=i(f[1]),e)),{})}function d(e){return\"light\"===e||1===e||\"1\"===e?1:\"regular\"===e||2===e||\"2\"===e?2:\"bold\"===e||3===e||\"3\"===e?3:void 0}function c(e){if(\"string\"==typeof e)return e}function u(e){const f=e.toString(16);return 1==f.length?\"0\"+f:f}function s(e){return Math.round(e/255*1e3)/1e3}function b(e){return Math.round(255*e)}function g(e){const{r:f,g:r,b:n}=function(e){let f=parseInt(\"#\"!=e[0]?e:e.substring(1),16);return{r:f>>16&255,g:f>>8&255,b:255&f}}(e);return[s(f),s(r),s(n)]}function h(e){return function(e){return\"#\"+u(e.r)+u(e.g)+u(e.b)}({r:b(e[0]),g:b(e[1]),b:b(e[2])})}function p(e,{lottieInstance:f}={}){const r=[];return e&&e.layers?(e.layers.forEach(((e,n)=>{e.nm&&e.ef&&e.ef.forEach(((e,a)=>{const t=e?.ef?.[0]?.v?.k;if(void 0===t)return;let o,i;if(o=f?`renderer.elements.${n}.effectsManager.effectElements.${a}.effectElements.0.p.v`:`layers.${n}.ef.${a}.ef.0.v.k`,\"ADBE Color Control\"===e.mn?i=\"color\":\"ADBE Slider Control\"===e.mn?i=\"slider\":\"ADBE Point Control\"===e.mn?i=\"point\":\"ADBE Checkbox Control\"===e.mn?i=\"checkbox\":e.mn.startsWith(\"Pseudo/\")&&(i=\"feature\"),!i)return;const l=e.nm.toLowerCase();r.push({name:l,path:o,value:t,type:i})}))})),r):r}function m(e,f){for(const r of f)t(e,r.path,r.value)}function y(e,f,r){for(const n of f)\"color\"===n.type?\"object\"==typeof r&&\"r\"in r&&\"g\"in r&&\"b\"in r?t(e,n.path,[s(r.r),s(r.g),s(r.b)]):Array.isArray(r)?t(e,n.path,r):\"string\"==typeof r&&t(e,n.path,g(i(r))):\"point\"===n.type?\"object\"==typeof r&&\"x\"in r&&\"y\"in r?(t(e,n.path+\".0\",r.x),t(e,n.path+\".1\",r.y)):Array.isArray(r)&&(t(e,n.path+\".0\",r[0]),t(e,n.path+\".1\",r[1])):t(e,n.path,r)}export{e as deepClone,a as get,n as has,g as hexToLottieColor,f as isNil,r as isObjectLike,h as lottieColorToHex,i as parseColor,l as parseColors,c as parseState,d as parseStroke,p as readProperties,m as resetProperties,t as set,y as updateProperties};\n//# sourceMappingURL=index.js.map\n","import { isObjectLike, parseColors, parseState, parseStroke } from '@lordicon/helpers';\n/**\n * Use constructable stylesheets if supported (https://developers.google.com/web/updates/2019/02/constructable-stylesheets)\n */\nconst SUPPORTS_ADOPTING_STYLE_SHEETS = 'adoptedStyleSheets' in Document.prototype && 'replace' in CSSStyleSheet.prototype;\n/**\n * List of events supported for intersection loading.\n */\nconst INTERSECTION_LOADING_EVENTS = ['click', 'mouseenter', 'mouseleave'];\n/**\n * Static style for this element.\n */\nconst ELEMENT_STYLE = `\n    :host {\n        position: relative;\n        display: inline-block;\n        width: 32px;\n        height: 32px;\n        transform: translate3d(0px, 0px, 0px);\n    }\n\n    :host(.current-color) svg path[fill] {\n        fill: currentColor;\n    }\n\n    :host(.current-color) svg path[stroke] {\n        stroke: currentColor;\n    }\n\n    svg {\n        position: absolute;\n        pointer-events: none;\n        display: block;\n        transform: unset!important;\n    }\n\n    ::slotted(*) {\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n    }\n\n    .body.ready ::slotted(*) {\n        display: none;\n    }\n`;\n/**\n * Current style sheet instance (if supported).\n */\nlet styleSheet;\n/**\n * Observed attributes for this custom element.\n */\nconst OBSERVED_ATTRIBUTES = [\n    \"colors\",\n    \"src\",\n    \"icon\",\n    \"state\",\n    \"trigger\",\n    \"loading\",\n    \"target\",\n    \"stroke\",\n];\n/**\n * Define custom element and a player to streamline the rendering, customization, and easy control of Lordicon icons.\n *\n * Example:\n * ```js\n * import lottie from 'lottie-web';\n * import { Element, Player } from '@lordicon/element';\n *\n * Element.setPlayerFactory((container, iconData, initial) => {\n *     return new Player(\n *         lottie.loadAnimation,\n *         container,\n *         iconData,\n *         initial,\n *     );\n * });\n *\n * customElements.define(\"lord-icon\", Element);\n * ```\n *\n * Notice: you can define this custom element, a lot easier with premade helper method: {@link index.defineElement | defineElement}.\n */\nexport class Element extends HTMLElement {\n    static _iconLoader;\n    static _playerFactory;\n    static _definedTriggers = new Map();\n    /**\n     * Get the current element version.\n     */\n    static get version() {\n        return '__BUILD_VERSION__';\n    }\n    /**\n     * Observed attributes for the custom element.\n     */\n    static get observedAttributes() {\n        return OBSERVED_ATTRIBUTES;\n    }\n    /**\n     * Assign a callback responsible for loading icons. This allows {@link element.Element | Element} to load {@link interfaces.IconData | icon data} from a custom source.\n     * Remember to assign the _icon loader_ before defining the `lord-icon` custom element to take effect.\n     *\n     * Example:\n     * ```js\n     * import lottie from 'lottie-web';\n     * import { defineElement, Element } from '@lordicon/element';\n     *\n     * Element.setIconLoader(async (name) => {\n     *     const response = await fetch(`https://example.com/${name}.json`);\n     *     return await response.json();\n     * });\n     *\n     * defineElement(lottie.loadAnimation);\n     * ```\n     *\n     * @param loader Custom icon loader callback.\n     */\n    static setIconLoader(loader) {\n        Element._iconLoader = loader;\n    }\n    /**\n     * Assign a callback that creates a player. The player is responsible for customizing icons and playing animations.\n     * @param loader\n     */\n    static setPlayerFactory(loader) {\n        Element._playerFactory = loader;\n    }\n    /**\n     * Define a supported trigger. Triggers allow the definition of custom interaction strategies for the icon.\n     * @param name Trigger name.\n     * @param triggerClass Trigger class.\n     */\n    static defineTrigger(name, triggerClass) {\n        Element._definedTriggers.set(name, triggerClass);\n    }\n    _root;\n    _isConnected = false;\n    _isReady = false;\n    _assignedIconData;\n    _loadedIconData;\n    _triggerInstance;\n    _playerInstance;\n    /**\n     * Callback created by one of the lazy loading methods.\n     * It forces the process to continue immediately.\n     */\n    delayedLoading = null;\n    /**\n     * Handle attribute updates.\n     * @param name\n     * @param oldValue\n     * @param newValue\n     */\n    attributeChangedCallback(name, oldValue, newValue) {\n        this[`${name}Changed`].call(this);\n    }\n    /**\n     * The element is connected.\n     */\n    connectedCallback() {\n        // create elements only once\n        if (!this._root) {\n            this.createElements();\n        }\n        if (this.loading === 'lazy') {\n            let intersectionObserver = undefined;\n            this.delayedLoading = (cancel) => {\n                intersectionObserver.unobserve(this);\n                intersectionObserver = undefined;\n                this.delayedLoading = null;\n                if (!cancel) {\n                    this.createPlayer();\n                }\n            };\n            const callback = (entries, observer) => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting && intersectionObserver) {\n                        if (this.delayedLoading) {\n                            this.delayedLoading();\n                        }\n                    }\n                });\n            };\n            intersectionObserver = new IntersectionObserver(callback);\n            intersectionObserver.observe(this);\n        }\n        else if (this.loading === 'interaction') {\n            let interactionEvent = undefined;\n            this.delayedLoading = (cancel) => {\n                for (const eventName of INTERSECTION_LOADING_EVENTS) {\n                    (targetElement || this).removeEventListener(eventName, intersectionCallback);\n                }\n                this.delayedLoading = null;\n                if (!cancel) {\n                    this.createPlayer().then(() => {\n                        (targetElement || this).dispatchEvent(new Event(interactionEvent));\n                    });\n                }\n            };\n            const targetElement = this.target ? this.closest(this.target) : null;\n            let intersectionCallback = (event) => {\n                const eventName = event?.type;\n                if (!interactionEvent) {\n                    interactionEvent = eventName;\n                    if (this.delayedLoading) {\n                        this.delayedLoading();\n                    }\n                }\n                else {\n                    interactionEvent = eventName;\n                }\n            };\n            intersectionCallback = intersectionCallback.bind(this);\n            for (const eventName of INTERSECTION_LOADING_EVENTS) {\n                (targetElement || this).addEventListener(eventName, intersectionCallback);\n            }\n        }\n        else {\n            this.createPlayer();\n        }\n        this._isConnected = true;\n    }\n    /**\n     * The element is disconnected.\n     */\n    disconnectedCallback() {\n        // clean state from delayed loading\n        if (this.delayedLoading) {\n            this.delayedLoading(true);\n        }\n        // remove player\n        this.destroyPlayer();\n        this._isConnected = false;\n    }\n    /**\n     * Create DOM elements.\n     */\n    createElements() {\n        // create shadow root for this element\n        this._root = this.attachShadow({\n            mode: \"open\"\n        });\n        if (SUPPORTS_ADOPTING_STYLE_SHEETS) {\n            if (!styleSheet) {\n                styleSheet = new CSSStyleSheet();\n                styleSheet.replaceSync(ELEMENT_STYLE);\n            }\n            this._root.adoptedStyleSheets = [styleSheet];\n        }\n        else {\n            const style = document.createElement(\"style\");\n            style.innerHTML = ELEMENT_STYLE;\n            this._root.appendChild(style);\n        }\n        // create container\n        const container = document.createElement(\"div\");\n        container.classList.add('body');\n        this._root.appendChild(container);\n        // create slot\n        const slot = document.createElement(\"slot\");\n        container.appendChild(slot);\n    }\n    /**\n     * Instantiate a player instance on demand using the assigned player factory.\n     * @returns\n     */\n    async createPlayer() {\n        // notify about missing loader\n        if (!Element._playerFactory) {\n            throw new Error('Missing player loader!');\n        }\n        // we are already on lazy loading process\n        if (this.delayedLoading) {\n            return;\n        }\n        const iconData = await this.loadIconData();\n        if (!iconData) {\n            return;\n        }\n        // create player instance\n        this._playerInstance = Element._playerFactory(this.animationContainer, iconData, {\n            state: parseState(this.state),\n            stroke: parseStroke(this.stroke),\n            colors: parseColors(this.colors),\n        });\n        // dynamic style for colors\n        const colors = Object.entries(this._playerInstance.colors || {});\n        if (colors.length) {\n            let styleContent = '';\n            for (const [key, value] of colors) {\n                styleContent += `\n                    :host(:not(.current-color)) svg path[fill].${key} {\n                        fill: var(--lord-icon-${key}, var(--lord-icon-${key}-base, #000));\n                    }\n        \n                    :host(:not(.current-color)) svg path[stroke].${key} {\n                        stroke: var(--lord-icon-${key}, var(--lord-icon-${key}-base, #000));\n                    }\n                `;\n            }\n            const style = document.createElement(\"style\");\n            style.innerHTML = styleContent;\n            this.animationContainer.appendChild(style);\n        }\n        // connect after style\n        this._playerInstance.connect();\n        // listen for ready\n        this._playerInstance.addEventListener('ready', () => {\n            if (this._triggerInstance && this._triggerInstance.onReady) {\n                this._triggerInstance.onReady();\n            }\n        });\n        // listen for refresh\n        this._playerInstance.addEventListener('refresh', () => {\n            this.refresh();\n            if (this._triggerInstance && this._triggerInstance.onRefresh) {\n                this._triggerInstance.onRefresh();\n            }\n        });\n        // listen for complete\n        this._playerInstance.addEventListener('complete', () => {\n            if (this._triggerInstance && this._triggerInstance.onComplete) {\n                this._triggerInstance.onComplete();\n            }\n        });\n        // listen for frame\n        this._playerInstance.addEventListener('frame', () => {\n            if (this._triggerInstance && this._triggerInstance.onFrame) {\n                this._triggerInstance.onFrame();\n            }\n        });\n        // refresh element instantly\n        this.refresh();\n        // create trigger (only if assigned)\n        this.triggerChanged();\n        // wait for player ready\n        await new Promise((resolve, reject) => {\n            if (this._playerInstance.isReady) {\n                resolve();\n            }\n            else {\n                this._playerInstance.addEventListener('ready', resolve);\n            }\n        });\n        // mark ready\n        this._isReady = true;\n        // notify about ready\n        this.dispatchEvent(new CustomEvent(\"ready\"));\n    }\n    /**\n     * Destroy connected player and connected trigger.\n     * The player is recreated every time the icon data changes.\n     */\n    destroyPlayer() {\n        // mark not ready\n        this._isReady = false;\n        // clear stored icon data\n        this._loadedIconData = undefined;\n        // remove trigger\n        if (this._triggerInstance) {\n            if (this._triggerInstance.onDisconnected) {\n                this._triggerInstance.onDisconnected();\n            }\n            this._triggerInstance = undefined;\n        }\n        // remove player\n        if (this._playerInstance) {\n            this._playerInstance.disconnect();\n            this._playerInstance = undefined;\n        }\n    }\n    /**\n     * Load the icon using the assigned icon loader or from the source indicated by the 'src' attribute.\n     * @returns Icon data.\n     */\n    async loadIconData() {\n        let iconData = this.iconData;\n        if (!iconData) {\n            if (this.icon && Element._iconLoader) {\n                this._loadedIconData = iconData = await Element._iconLoader(this.icon);\n            }\n            else if (this.src) {\n                const response = await fetch(this.src);\n                this._loadedIconData = iconData = await response.json();\n            }\n        }\n        return iconData;\n    }\n    /**\n     * Synchronize the element's state with the player.\n     */\n    refresh() {\n        this.movePaletteToCssVariables();\n    }\n    /**\n     * Update defaults for CSS variables.\n     * Notice: CSS variables take precedence over colors assigned by other methods.\n     */\n    movePaletteToCssVariables() {\n        for (const [key, value] of Object.entries(this._playerInstance.colors || {})) {\n            if (value) {\n                this.animationContainer.style.setProperty(`--lord-icon-${key}-base`, value);\n            }\n            else {\n                this.animationContainer.style.removeProperty(`--lord-icon-${key}-base`);\n            }\n        }\n    }\n    /**\n     * The 'target' attribute has been changed. The element should now reload its trigger.\n     */\n    targetChanged() {\n        this.triggerChanged();\n    }\n    /**\n     * The 'loading' attribute has been changed.\n     */\n    loadingChanged() {\n    }\n    /**\n     * The 'trigger' attribute has been changed. Disconnect the old trigger and instantiate the new one.\n     */\n    triggerChanged() {\n        if (this._triggerInstance) {\n            if (this._triggerInstance.onDisconnected) {\n                this._triggerInstance.onDisconnected();\n            }\n            this._triggerInstance = undefined;\n            this._playerInstance?.pause();\n        }\n        if (!this.trigger || !this._playerInstance) {\n            return;\n        }\n        const TriggerClass = Element._definedTriggers.get(this.trigger);\n        if (!TriggerClass) {\n            throw new Error(`Can't use unregistered trigger!`);\n        }\n        const targetElement = this.target ? this.closest(this.target) : null;\n        this._triggerInstance = new TriggerClass(this._playerInstance, this, targetElement || this);\n        if (this._triggerInstance.onConnected) {\n            this._triggerInstance.onConnected();\n        }\n        if (this._playerInstance.isReady && this._triggerInstance.onReady) {\n            this._triggerInstance.onReady();\n        }\n    }\n    /**\n     * The 'colors' attribute has been changed. Notify the player about the new value.\n     */\n    colorsChanged() {\n        if (!this._playerInstance) {\n            return;\n        }\n        this._playerInstance.colors = parseColors(this.colors) || null;\n    }\n    /**\n     * The 'stroke' attribute has been changed. Notify the player about the new value.\n     */\n    strokeChanged() {\n        if (!this._playerInstance) {\n            return;\n        }\n        this._playerInstance.stroke = parseStroke(this.stroke) || null;\n    }\n    /**\n     * The 'state' attribute has been changed. Notify the player about the new value.\n     */\n    stateChanged() {\n        if (!this._playerInstance) {\n            return;\n        }\n        this._playerInstance.state = this.state;\n    }\n    /**\n     * The 'icon' attribute has been changed. Reload our player.\n     */\n    iconChanged() {\n        if (!this._isConnected) {\n            return;\n        }\n        this.destroyPlayer();\n        this.createPlayer();\n    }\n    /**\n     * The 'src' attribute has been changed. Reload our player.\n     */\n    srcChanged() {\n        if (!this._isConnected) {\n            return;\n        }\n        this.destroyPlayer();\n        this.createPlayer();\n    }\n    /**\n     * Update the current icon. You can assign either an icon name handled by the {@link interfaces.IconLoader | icon loader} or directly use {@link interfaces.IconData | icon data}.\n     */\n    set icon(value) {\n        if (value && isObjectLike(value)) {\n            if (this._assignedIconData !== value) {\n                this._assignedIconData = value;\n                if (this.hasAttribute('icon')) {\n                    this.removeAttribute('icon');\n                }\n                else {\n                    this.iconChanged();\n                }\n            }\n        }\n        else {\n            const oldIconData = this._assignedIconData;\n            this._assignedIconData = undefined;\n            if (value && typeof value === 'string') {\n                this.setAttribute('icon', value);\n            }\n            else {\n                this.removeAttribute('icon');\n                if (oldIconData) {\n                    this.iconChanged();\n                }\n            }\n        }\n    }\n    /**\n     * Get the icon (icon name or assiged {@link interfaces.IconData | icon data})\n     */\n    get icon() {\n        return this._assignedIconData || this.getAttribute('icon');\n    }\n    /**\n     * Set the 'src' value.\n     */\n    set src(value) {\n        if (value) {\n            this.setAttribute('src', value);\n        }\n        else {\n            this.removeAttribute('src');\n        }\n    }\n    /**\n     * Get the 'src' value.\n     */\n    get src() {\n        return this.getAttribute('src');\n    }\n    /**\n     * Set the 'state' value.\n     *\n     * Note: You can check available states for the loaded icon using the `states` property.\n     */\n    set state(value) {\n        if (value) {\n            this.setAttribute('state', value);\n        }\n        else {\n            this.removeAttribute('state');\n        }\n    }\n    /**\n     * Get the 'state' value.\n     */\n    get state() {\n        return this.getAttribute('state');\n    }\n    /**\n     * Configure color values. We support a string format with comma-separated colors: \"primary:#fdd394,secondary:#03a9f4\".\n     *\n     * Example:\n     * ```html\n     * <lord-icon colors=\"primary:#fdd394,secondary:#03a9f4\" src=\"/icons/confetti.json\"></lord-icon>\n     * ```\n     */\n    set colors(value) {\n        if (value) {\n            this.setAttribute('colors', value);\n        }\n        else {\n            this.removeAttribute('colors');\n        }\n    }\n    /**\n     * Get the 'colors' value.\n     */\n    get colors() {\n        return this.getAttribute('colors');\n    }\n    /**\n     * Set the 'trigger' value. Provide the name of an already defined trigger.\n     */\n    set trigger(value) {\n        if (value) {\n            this.setAttribute('trigger', value);\n        }\n        else {\n            this.removeAttribute('trigger');\n        }\n    }\n    /**\n     * Get the 'trigger' value.\n     */\n    get trigger() {\n        return this.getAttribute('trigger');\n    }\n    /**\n     * Set the loading strategy. By default, {@link interfaces.IconData | icon data} is loaded instantly upon {@link interfaces.IPlayer | player} initialization.\n     * It's possible to delay icon loading (using the _src_ and _icon_ attributes) by changing the _loading_ value to _lazy_ or _interaction_.\n     */\n    set loading(value) {\n        if (value) {\n            this.setAttribute('loading', value);\n        }\n        else {\n            this.removeAttribute('loading');\n        }\n    }\n    /**\n     * Get the 'loading' value.\n     */\n    get loading() {\n        if (this.getAttribute('loading')) {\n            const param = this.getAttribute('loading').toLowerCase();\n            if (param === 'lazy') {\n                return 'lazy';\n            }\n            else if (param === 'interaction') {\n                return 'interaction';\n            }\n        }\n        return null;\n    }\n    /**\n     * Assign a query selector for the closest element target used for listening to events.\n     */\n    set target(value) {\n        if (value) {\n            this.setAttribute('target', value);\n        }\n        else {\n            this.removeAttribute('target');\n        }\n    }\n    /**\n     * Get the 'target' value.\n     */\n    get target() {\n        return this.getAttribute('target');\n    }\n    /**\n     * Set the 'stroke' value (1, 2, 3, light, regular, bold).\n     */\n    set stroke(value) {\n        if (value) {\n            this.setAttribute('stroke', value);\n        }\n        else {\n            this.removeAttribute('stroke');\n        }\n    }\n    /**\n     * Get the 'stroke' value.\n     */\n    get stroke() {\n        if (this.hasAttribute('stroke')) {\n            return this.getAttribute('stroke');\n        }\n        return null;\n    }\n    /**\n     * Check whether the element is ready (has an instantiated player, trigger, and loaded icon data).\n     *\n     * You can listen for the element's readiness with an event listener:\n     * ```js\n     * element.addEventListener('ready', () => {});\n     * ```\n     */\n    get isReady() {\n        return this._isReady;\n    }\n    /**\n     * Access the {@link interfaces.IPlayer | player} instance.\n     */\n    get playerInstance() {\n        return this._playerInstance;\n    }\n    /**\n     * Access the {@link interfaces.ITrigger | trigger} instance.\n     */\n    get triggerInstance() {\n        return this._triggerInstance;\n    }\n    /**\n     * Access the animation container element.\n     */\n    get animationContainer() {\n        return this._root.lastElementChild;\n    }\n    /**\n     * Access the loaded {@link interfaces.IconData | icon data}.\n     */\n    get iconData() {\n        return this._assignedIconData || this._loadedIconData;\n    }\n}\n//# sourceMappingURL=element.js.map","import { deepClone, get, isNil, lottieColorToHex, parseStroke, readProperties, resetProperties, updateProperties } from '@lordicon/helpers';\n/**\n * Default lottie-web options used by provided Player.\n */\nexport const DEFAULT_LOTTIE_WEB_OPTIONS = {\n    renderer: \"svg\",\n    loop: false,\n    autoplay: false,\n    rendererSettings: {\n        preserveAspectRatio: \"xMidYMid meet\",\n        progressiveLoad: true,\n        hideOnTransparent: true,\n    },\n};\n/**\n * Create convenient proxy for manipulating colors.\n */\nfunction createColorsProxy() {\n    return new Proxy(this, {\n        set: (target, property, value, receiver) => {\n            if (typeof property === 'string') {\n                if (value) {\n                    updateProperties(this.lottie, this.rawProperties.filter(c => c.type === 'color' && c.name === property), value);\n                }\n                else {\n                    resetProperties(this.lottie, this.rawProperties.filter(c => c.type === 'color' && c.name === property));\n                }\n                target.refresh();\n            }\n            return true;\n        },\n        get: (target, property, receiver) => {\n            for (const current of target.rawProperties) {\n                if (current.type == 'color' && typeof property === 'string' && property == current.name) {\n                    const data = get(this.lottie, current.path);\n                    if (data) {\n                        return lottieColorToHex(data);\n                    }\n                }\n            }\n            return undefined;\n        },\n        deleteProperty: (target, property) => {\n            if (typeof property === 'string') {\n                resetProperties(this.lottie, this.rawProperties.filter(c => c.type === 'color' && c.name === property));\n                target.refresh();\n            }\n            return true;\n        },\n        ownKeys: (target) => {\n            return target.rawProperties.filter(c => c.type == 'color').map(c => c.name);\n        },\n        has: (target, property) => {\n            for (const current of target.rawProperties) {\n                if (current.type == 'color' && typeof property === 'string' && property == current.name) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        getOwnPropertyDescriptor: (target) => {\n            return {\n                enumerable: true,\n                configurable: true,\n            };\n        },\n    });\n}\n/**\n * The player implementation as a wrapper around `lottie-web`.\n *\n * Main purposes:\n *\n * - Provides simple API to control animation and customize icon properties on the fly.\n * - Allows to react on the animation life cycle.\n * - Separate integration with `lottie-web` from our custom element. That way, the player can potentially work without a _custom element_.\n * - Simplifies custom element implementation.\n * - Simplifies testing.\n */\nexport class Player {\n    _animationLoader;\n    _container;\n    _iconData;\n    _initial;\n    _options;\n    _lottie;\n    _isReady = false;\n    _colorsProxy;\n    _direction = 1;\n    _speed = 1;\n    _rawProperties;\n    _eventCallbacks = {};\n    _state;\n    _states;\n    /**\n     * @param animationLoader Provide `loadAnimation` here from `lottie-web`.\n     * @param container DOM element in which the animation will be drawn.\n     * @param iconData Lottie icon data.\n     * @param options Options for `lottie-web`. If not provided {@link DEFAULT_LOTTIE_WEB_OPTIONS | default} will be used.\n     */\n    constructor(animationLoader, container, iconData, initial, options) {\n        this._animationLoader = animationLoader;\n        this._container = container;\n        this._iconData = iconData;\n        this._initial = initial || {};\n        this._options = options || DEFAULT_LOTTIE_WEB_OPTIONS;\n        // parse states\n        this._states = (iconData.markers || []).map((c) => {\n            const [partA, partB] = c.cm.split(':');\n            const newState = {\n                time: c.tm,\n                duration: c.dr,\n                name: partB || partA,\n                default: partB && partA.includes('default') ? true : false,\n            };\n            if (newState.name === this._initial.state) {\n                this._state = newState;\n            }\n            else if (newState.default && isNil(this._initial.state)) {\n                this._state = newState;\n            }\n            return newState;\n        });\n    }\n    connect() {\n        if (this._lottie) {\n            throw new Error('Already connected player!');\n        }\n        const fixedParams = {};\n        const initialOptions = {};\n        if (this._state) {\n            initialOptions.initialSegment = [this._state.time, this._state.time + this._state.duration + 1];\n        }\n        if (this._states.length) {\n            const firstState = this._states[0];\n            const lastState = this._states[this._states.length - 1];\n            // fix animation time\n            fixedParams.ip = firstState.time;\n            fixedParams.op = lastState.time + lastState.duration + 1;\n        }\n        this._lottie = this._animationLoader({\n            ...this._options,\n            ...initialOptions,\n            container: this._container,\n            animationData: Object.assign(deepClone(this._iconData), fixedParams),\n        });\n        // initial colors\n        if (this._initial.colors) {\n            this.colors = this._initial.colors;\n        }\n        // initial stroke\n        if (this._initial.stroke) {\n            this.stroke = this._initial.stroke;\n        }\n        this._lottie.addEventListener('complete', (e) => {\n            this.triggerEvent('complete');\n        });\n        this._lottie.addEventListener('loopComplete', () => {\n            this.triggerEvent('complete');\n        });\n        this._lottie.addEventListener('enterFrame', (params) => {\n            this.triggerEvent('frame');\n        });\n        if (this._lottie.isLoaded) {\n            this._container.classList.add('ready');\n            this._isReady = true;\n            this.triggerEvent('ready');\n        }\n        else {\n            this._lottie.addEventListener('config_ready', () => {\n                this._container.classList.add('ready');\n                this._isReady = true;\n                this.triggerEvent('ready');\n            });\n        }\n    }\n    disconnect() {\n        if (!this._lottie) {\n            throw new Error('Not connected player!');\n        }\n        this._isReady = false;\n        this._lottie.destroy();\n        this._lottie = undefined;\n        this._colorsProxy = undefined;\n        this._rawProperties = undefined;\n        this._container.classList.remove('ready');\n    }\n    addEventListener(name, callback) {\n        if (!this._eventCallbacks[name]) {\n            this._eventCallbacks[name] = [];\n        }\n        this._eventCallbacks[name].push(callback);\n        return () => {\n            this.removeEventListener(name, callback);\n        };\n    }\n    removeEventListener(eventName, callback) {\n        if (!callback) {\n            this._eventCallbacks[eventName] = null;\n        }\n        else if (this._eventCallbacks[eventName]) {\n            let i = 0;\n            let len = this._eventCallbacks[eventName].length;\n            while (i < len) {\n                if (this._eventCallbacks[eventName][i] === callback) {\n                    this._eventCallbacks[eventName].splice(i, 1);\n                    i -= 1;\n                    len -= 1;\n                }\n                i += 1;\n            }\n            if (!this._eventCallbacks[eventName].length) {\n                this._eventCallbacks[eventName] = null;\n            }\n        }\n    }\n    /**\n     * Trigger event.\n     * @param eventName Event name.\n     * @param args Args.\n     */\n    triggerEvent(eventName, args) {\n        if (this._eventCallbacks[eventName]) {\n            const callbacks = this._eventCallbacks[eventName];\n            for (let i = 0; i < callbacks.length; i += 1) {\n                callbacks[i](args);\n            }\n        }\n    }\n    /**\n     * Refresh animation and notify about that fact.\n     */\n    refresh() {\n        this._lottie?.renderer.renderFrame(null);\n        this.triggerEvent('refresh');\n    }\n    play() {\n        this._lottie.setDirection(this._direction);\n        this._lottie.play();\n    }\n    playFromBeginning() {\n        this._lottie.setDirection(1);\n        if (this._state) {\n            this._lottie.playSegments([this._state.time, this._state.time + this._state.duration + 1], true);\n        }\n        else {\n            this._lottie.goToAndPlay(0);\n        }\n    }\n    pause() {\n        this._lottie.pause();\n    }\n    stop() {\n        this._lottie.stop();\n    }\n    goToFrame(frame) {\n        this._lottie.goToAndStop(frame, true);\n    }\n    goToFirstFrame() {\n        this.goToFrame(0);\n    }\n    goToLastFrame() {\n        this.goToFrame(Math.max(0, this.frames));\n    }\n    set properties(properties) {\n        this.colors = properties.colors || null;\n        this.stroke = properties.stroke || null;\n        this.state = properties.state || null;\n    }\n    get properties() {\n        const result = {};\n        if (this.rawProperties.filter(c => c.type === 'color').length) {\n            result.colors = { ...this.colors };\n        }\n        if (this.rawProperties.filter(c => c.name === 'stroke' || c.name === 'stroke-layers').length) {\n            result.stroke = this.stroke;\n        }\n        if (this._states.length) {\n            result.state = this.state;\n        }\n        return result;\n    }\n    set colors(colors) {\n        resetProperties(this._lottie, this.rawProperties.filter(c => c.type === 'color'));\n        if (colors) {\n            for (const [key, value] of Object.entries(colors)) {\n                updateProperties(this._lottie, this.rawProperties.filter(c => c.type === 'color' && c.name === key), value);\n            }\n        }\n        this.refresh();\n    }\n    get colors() {\n        if (!this._colorsProxy) {\n            this._colorsProxy = createColorsProxy.call(this);\n        }\n        return this._colorsProxy;\n    }\n    set stroke(stroke) {\n        resetProperties(this._lottie, this.rawProperties.filter(c => c.name === 'stroke' || c.name === 'stroke-layers'));\n        const newStroke = parseStroke(stroke);\n        if (newStroke) {\n            updateProperties(this._lottie, this.rawProperties.filter(c => c.name === 'stroke' || c.name === 'stroke-layers'), newStroke);\n        }\n        this.refresh();\n    }\n    get stroke() {\n        const property = this.rawProperties.filter(c => c.name === 'stroke' || c.name === 'stroke-layers')[0];\n        if (property) {\n            let value = +get(this._lottie, property.path);\n            return parseStroke(value) || null;\n        }\n        return null;\n    }\n    set state(state) {\n        if (state === this.state) {\n            return;\n        }\n        const isPlaying = this.isPlaying;\n        this._state = undefined;\n        if (isNil(state)) {\n            this._state = this._states.filter(c => c.default)[0];\n        }\n        else if (state) {\n            this._state = this._states.filter(c => c.name === state)[0];\n        }\n        if (this._state) {\n            this._lottie?.setSegment(this._state.time, this._state.time + this._state.duration + 1);\n        }\n        else {\n            this._lottie.resetSegments(true);\n        }\n        this.goToFirstFrame();\n        if (isPlaying) {\n            this.pause();\n            this.play();\n        }\n    }\n    get state() {\n        if (this._state) {\n            return this._state.name;\n        }\n        return '';\n    }\n    set speed(speed) {\n        this._speed = speed;\n        this._lottie?.setSpeed(speed);\n    }\n    get speed() {\n        return this._speed;\n    }\n    set direction(direction) {\n        this._direction = direction;\n        this._lottie.setDirection(direction);\n    }\n    get direction() {\n        return this._direction;\n    }\n    set loop(loop) {\n        this._lottie.loop = loop;\n    }\n    get loop() {\n        return this._lottie.loop ? true : false;\n    }\n    set frame(frame) {\n        this.goToFrame(Math.max(0, Math.min(this.frames, frame)));\n    }\n    get frame() {\n        return this._lottie.currentFrame;\n    }\n    get states() {\n        return this._states;\n    }\n    get isPlaying() {\n        return !this._lottie.isPaused;\n    }\n    get isReady() {\n        return this._isReady;\n    }\n    get frames() {\n        return this._lottie.getDuration(true) - 1;\n    }\n    get duration() {\n        return this._lottie.getDuration(false);\n    }\n    /**\n     * Access to internal lottie player instance.\n     */\n    get lottie() {\n        return this._lottie;\n    }\n    /**\n     * Access all customizable properties.\n     */\n    get rawProperties() {\n        if (!this._rawProperties) {\n            this._rawProperties = readProperties(this._iconData, { lottieInstance: true });\n        }\n        return this._rawProperties || [];\n    }\n}\n//# sourceMappingURL=player.js.map","/**\n * The __Boomerang__ trigger plays the animation from the first to the last frame when you hover over it and then plays in reverse once you move the cursor away.\n */\nexport class Boomerang {\n    player;\n    element;\n    targetElement;\n    constructor(player, element, targetElement) {\n        this.player = player;\n        this.element = element;\n        this.targetElement = targetElement;\n        this.onHover = this.onHover.bind(this);\n    }\n    onConnected() {\n        this.targetElement.addEventListener('mouseenter', this.onHover);\n    }\n    onDisconnected() {\n        this.targetElement.removeEventListener('mouseenter', this.onHover);\n        this.player.direction = 1;\n    }\n    onComplete() {\n        this.player.direction = -1;\n        this.player.play();\n    }\n    onHover() {\n        this.player.direction = 1;\n        this.player.play();\n    }\n}\n//# sourceMappingURL=boomerang.js.map","const CLICK_EVENTS = [\n    { name: 'mousedown' },\n    { name: 'touchstart', options: { passive: true } },\n];\n/**\n * The __Click__ trigger plays the animation after clicking on the icon (its target).\n */\nexport class Click {\n    player;\n    element;\n    targetElement;\n    constructor(player, element, targetElement) {\n        this.player = player;\n        this.element = element;\n        this.targetElement = targetElement;\n        this.onClick = this.onClick.bind(this);\n    }\n    onConnected() {\n        for (const event of CLICK_EVENTS) {\n            this.targetElement.addEventListener(event.name, this.onClick, event.options);\n        }\n    }\n    onDisconnected() {\n        for (const event of CLICK_EVENTS) {\n            this.targetElement.removeEventListener(event.name, this.onClick);\n        }\n    }\n    onClick() {\n        if (this.player.isPlaying) {\n            return;\n        }\n        this.player.playFromBeginning();\n    }\n}\n//# sourceMappingURL=click.js.map","/**\n * The __Hover__ trigger plays the animation from the first to the last frame when the cursor hovers over the icon (target).\n */\nexport class Hover {\n    player;\n    element;\n    targetElement;\n    constructor(player, element, targetElement) {\n        this.player = player;\n        this.element = element;\n        this.targetElement = targetElement;\n        this.onHover = this.onHover.bind(this);\n    }\n    onConnected() {\n        this.targetElement.addEventListener('mouseenter', this.onHover);\n    }\n    onDisconnected() {\n        this.targetElement.removeEventListener('mouseenter', this.onHover);\n    }\n    onHover() {\n        if (this.player.isPlaying) {\n            return;\n        }\n        this.player.playFromBeginning();\n    }\n}\n//# sourceMappingURL=hover.js.map","/**\n * The __In__ trigger plays the animation when the icon (target) is within the user's viewport.\n */\nexport class In {\n    player;\n    element;\n    targetElement;\n    playTimeout = null;\n    played = false;\n    intersectionObserver;\n    constructor(player, element, targetElement) {\n        this.player = player;\n        this.element = element;\n        this.targetElement = targetElement;\n    }\n    onConnected() {\n        if (this.loading) {\n            this.play();\n        }\n        else {\n            const callback = (entries, observer) => {\n                entries.forEach(entry => {\n                    if (entry.isIntersecting) {\n                        this.play();\n                        this.resetIntersectionObserver();\n                    }\n                });\n            };\n            this.intersectionObserver = new IntersectionObserver(callback);\n            this.intersectionObserver.observe(this.element);\n        }\n    }\n    onDisconnected() {\n        this.played = false;\n        this.resetIntersectionObserver();\n        this.resetPlayDelayTimer();\n    }\n    play() {\n        if (this.played) {\n            return;\n        }\n        this.played = true;\n        this.resetPlayDelayTimer();\n        if (this.delay > 0) {\n            this.playTimeout = setTimeout(() => {\n                this.player.playFromBeginning();\n            }, this.delay);\n        }\n        else {\n            this.player.playFromBeginning();\n        }\n    }\n    resetIntersectionObserver() {\n        if (!this.intersectionObserver) {\n            return;\n        }\n        this.intersectionObserver.unobserve(this.element);\n        this.intersectionObserver = undefined;\n    }\n    resetPlayDelayTimer() {\n        if (!this.playTimeout) {\n            return;\n        }\n        clearTimeout(this.playTimeout);\n        this.playTimeout = null;\n    }\n    get delay() {\n        const value = this.element.hasAttribute('delay') ? +(this.element.getAttribute('delay') || 0) : 0;\n        return Math.max(value, 0);\n    }\n    get loading() {\n        return this.element.hasAttribute('loading');\n    }\n}\n//# sourceMappingURL=in.js.map","/**\n * The __Loop__ trigger plays the animation from the first to the last frame infinitely, with no interaction necessary.\n */\nexport class Loop {\n    player;\n    element;\n    targetElement;\n    playTimeout = null;\n    constructor(player, element, targetElement) {\n        this.player = player;\n        this.element = element;\n        this.targetElement = targetElement;\n    }\n    onReady() {\n        this.play();\n    }\n    onComplete() {\n        this.play();\n    }\n    onDisconnected() {\n        this.resetPlayDelayTimer();\n    }\n    play() {\n        this.resetPlayDelayTimer();\n        if (this.delay > 0) {\n            this.playTimeout = setTimeout(() => {\n                this.player.playFromBeginning();\n            }, this.delay);\n        }\n        else {\n            this.player.playFromBeginning();\n        }\n    }\n    resetPlayDelayTimer() {\n        if (!this.playTimeout) {\n            return;\n        }\n        clearTimeout(this.playTimeout);\n        this.playTimeout = null;\n    }\n    get delay() {\n        const value = this.element.hasAttribute('delay') ? +(this.element.getAttribute('delay') || 0) : 0;\n        return Math.max(value, 0);\n    }\n}\n//# sourceMappingURL=loop.js.map","/**\n * The LoopOnHover trigger plays the animation from the first to the last frame infinitely when the cursor hovers over the icon (target).\n */\nexport class LoopOnHover {\n    player;\n    element;\n    targetElement;\n    playTimeout = null;\n    mouseIn = false;\n    constructor(player, element, targetElement) {\n        this.player = player;\n        this.element = element;\n        this.targetElement = targetElement;\n        this.onMouseEnter = this.onMouseEnter.bind(this);\n        this.onMouseLeave = this.onMouseLeave.bind(this);\n    }\n    onConnected() {\n        this.targetElement.addEventListener('mouseenter', this.onMouseEnter);\n        this.targetElement.addEventListener('mouseleave', this.onMouseLeave);\n    }\n    onDisconnected() {\n        this.targetElement.removeEventListener('mouseenter', this.onMouseEnter);\n        this.targetElement.removeEventListener('mouseleave', this.onMouseLeave);\n        this.resetPlayDelayTimer();\n    }\n    onMouseEnter() {\n        this.mouseIn = true;\n        if (!this.player.isPlaying) {\n            this.play();\n        }\n    }\n    onMouseLeave() {\n        this.mouseIn = false;\n        this.resetPlayDelayTimer();\n    }\n    onComplete() {\n        this.play();\n    }\n    play() {\n        this.resetPlayDelayTimer();\n        if (!this.mouseIn) {\n            return;\n        }\n        if (this.delay > 0) {\n            this.playTimeout = setTimeout(() => {\n                this.player.playFromBeginning();\n            }, this.delay);\n        }\n        else {\n            this.player.playFromBeginning();\n        }\n    }\n    resetPlayDelayTimer() {\n        if (!this.playTimeout) {\n            return;\n        }\n        clearTimeout(this.playTimeout);\n        this.playTimeout = null;\n    }\n    get delay() {\n        const value = this.element.hasAttribute('delay') ? +(this.element.getAttribute('delay') || 0) : 0;\n        return Math.max(value, 0);\n    }\n}\n//# sourceMappingURL=loop-on-hover.js.map","/**\n * The __Morph__ trigger allows playing the animation from the first to the last frame when hovering or clicking on the icon. After moving or clicking away, the animation plays in reverse.\n */\nexport class Morph {\n    player;\n    element;\n    targetElement;\n    constructor(player, element, targetElement) {\n        this.player = player;\n        this.element = element;\n        this.targetElement = targetElement;\n        this.onMouseEnter = this.onMouseEnter.bind(this);\n        this.onMouseLeave = this.onMouseLeave.bind(this);\n    }\n    onConnected() {\n        this.targetElement.addEventListener('mouseenter', this.onMouseEnter);\n        this.targetElement.addEventListener('mouseleave', this.onMouseLeave);\n    }\n    onDisconnected() {\n        this.targetElement.removeEventListener('mouseenter', this.onMouseEnter);\n        this.targetElement.removeEventListener('mouseleave', this.onMouseLeave);\n        this.player.direction = 1;\n    }\n    onMouseEnter() {\n        this.player.direction = 1;\n        this.player.play();\n    }\n    onMouseLeave() {\n        this.player.direction = -1;\n        this.player.play();\n    }\n}\n//# sourceMappingURL=morph.js.map","const NUMBER_REGEX = /^\\d*(\\.\\d+)?$/;\nconst MUTATION_OBSERVER_CONFIG = { attributes: true, childList: false, subtree: false };\n/**\n * The __Sequence__ trigger allows you to define complex playing scenarios with a simple definition.\n *\n * Example usage:\n * ```html\n * <lord-icon trigger=\"sequence\" sequence=\"state:intro-empty,play,state:hover-empty,play,state:morph-fill,play,state:morph-erase,play,state:intro-empty,delay:first:last:500,play:reverse\" src=\"/trash.json\"></lord-icon>\n * ```\n */\nexport class Sequence {\n    player;\n    element;\n    targetElement;\n    sequenceIndex = 0;\n    frameState = null;\n    frameDelayFirst = null;\n    frameDelayLast = null;\n    timer;\n    observer;\n    constructor(player, element, targetElement) {\n        this.player = player;\n        this.element = element;\n        this.targetElement = targetElement;\n        this.observer = new MutationObserver((mutationList, observer) => {\n            for (const mutation of mutationList) {\n                if (mutation.type === 'attributes' && mutation.attributeName === 'sequence') {\n                    this.reset();\n                    this.step();\n                }\n            }\n        });\n    }\n    onReady() {\n        this.step();\n    }\n    onComplete() {\n        this.timer = setTimeout(() => {\n            this.timer = null;\n            this.frameDelayLast = null;\n            this.step();\n        }, this.frameDelayLast || 0);\n    }\n    onConnected() {\n        this.observer.observe(this.element, MUTATION_OBSERVER_CONFIG);\n    }\n    onDisconnected() {\n        this.observer.disconnect();\n        if (this.timer) {\n            clearTimeout(this.timer);\n            this.timer = null;\n        }\n    }\n    reset() {\n        this.player.pause();\n        this.sequenceIndex = 0;\n        this.frameState = this.frameDelayFirst = this.frameDelayLast = null;\n        if (this.timer) {\n            clearTimeout(this.timer);\n            this.timer = null;\n        }\n    }\n    takeStep() {\n        const steps = this.sequence.split(',');\n        const step = steps[this.sequenceIndex];\n        this.sequenceIndex++;\n        if (this.sequenceIndex >= steps.length) {\n            this.sequenceIndex = 0;\n        }\n        const [action, ...params] = step.split(':');\n        return { action, params };\n    }\n    handleStep(action, params) {\n        if (action === 'play') {\n            if (this.frameState) {\n                this.player.state = this.frameState;\n                this.frameState = null;\n            }\n            const hasReverse = params.includes('reverse');\n            if (hasReverse) {\n                this.player.goToLastFrame();\n                this.player.direction = -1;\n            }\n            else {\n                this.player.goToFirstFrame();\n                this.player.direction = 1;\n            }\n            this.timer = setTimeout(() => {\n                this.timer = null;\n                this.frameDelayFirst = null;\n                this.player.play();\n            }, this.frameDelayFirst || 0);\n        }\n        else if (action === 'frame') {\n            let frameIndex = 0;\n            if (params.length && params[0].match(NUMBER_REGEX)) {\n                frameIndex = Math.max(0, Math.min(this.player.frames, +params[0]));\n            }\n            this.player.frame = frameIndex;\n            this.timer = setTimeout(() => {\n                this.timer = null;\n                this.frameDelayFirst = null;\n                this.step();\n            }, this.frameDelayFirst || 0);\n        }\n        else if (action === 'state') {\n            this.frameState = params[0];\n            this.step();\n        }\n        else if (action === 'delay') {\n            let value = null;\n            for (const param of params) {\n                if (param && param.match(NUMBER_REGEX)) {\n                    value = +param;\n                }\n            }\n            if (value && value > 0) {\n                if (params.includes('first') && params.includes('last')) {\n                    this.frameDelayFirst = value;\n                    this.frameDelayLast = value;\n                }\n                else if (params.includes('first')) {\n                    this.frameDelayFirst = value;\n                }\n                else if (params.includes('last')) {\n                    this.frameDelayLast = value;\n                }\n                else {\n                    this.frameDelayFirst = value;\n                }\n            }\n            this.step();\n        }\n        else if (action === 'idle') {\n            // do nothing\n        }\n        else {\n            throw new Error(`Invalid sequence action: ${action}`);\n        }\n    }\n    step() {\n        const { action, params } = this.takeStep();\n        if (!action) {\n            return;\n        }\n        this.handleStep(action, params);\n    }\n    get sequence() {\n        return this.element.getAttribute('sequence') || '';\n    }\n}\n//# sourceMappingURL=sequence.js.map","import { Element } from './element';\nimport { Player } from './player';\nimport { Boomerang, Click, Hover, In, Loop, LoopOnHover, Morph, Sequence } from './triggers';\nexport { Boomerang, Click, Element, Hover, In, Loop, LoopOnHover, Morph, Player, Sequence };\nexport * from \"./interfaces\";\n/**\n * Helper method that defines the `lord-icon` custom element with pre-made triggers and a {@link interfaces.PlayerFactory | player factory}.\n *\n * This method defines the following triggers:\n * - {@link triggers/in.In | in}\n * - {@link triggers/click.Click | click}\n * - {@link triggers/hover.Hover | hover}\n * - {@link triggers/loop.Loop | loop}\n * - {@link triggers/loop-on-hover.LoopOnHover | loop-on-hover}\n * - {@link triggers/morph.Morph | morph}\n * - {@link triggers/boomerang.Boomerang | boomerang}\n * - {@link triggers/sequence.Sequence | sequence}\n *\n * Example of tag definition with the default setup:\n * ```js\n * import lottie from 'lottie-web';\n * import { defineElement } from '@lordicon/element';\n *\n * defineElement(lottie.loadAnimation);\n * ```\n *\n * Basic usage from markup which is possible after tag definition:\n * ```html\n * <lord-icon trigger=\"hover\" src=\"/icons/confetti.json\"></lord-icon>\n * ```\n *\n * @param animationLoader Use `loadAnimation` from the `lottie-web` package.\n */\nexport function defineElement(animationLoader) {\n    Element.setPlayerFactory((container, iconData, initial) => {\n        return new Player(animationLoader, container, iconData, initial);\n    });\n    Element.defineTrigger('in', In);\n    Element.defineTrigger('click', Click);\n    Element.defineTrigger('hover', Hover);\n    Element.defineTrigger('loop', Loop);\n    Element.defineTrigger('loop-on-hover', LoopOnHover);\n    Element.defineTrigger('morph', Morph);\n    Element.defineTrigger('boomerang', Boomerang);\n    Element.defineTrigger('sequence', Sequence);\n    if (!customElements.get || !customElements.get('lord-icon')) {\n        customElements.define('lord-icon', Element);\n    }\n}\n//# sourceMappingURL=index.js.map"],"names":["e","JSON","parse","stringify","f","r","a","n","Array","isArray","split","t","length","o","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","i","startsWith","toLowerCase","l","filter","map","reduce","d","c","u","toString","s","Math","round","b","g","parseInt","substring","h","m","path","value","y","type","x","SUPPORTS_ADOPTING_STYLE_SHEETS","Document","prototype","CSSStyleSheet","INTERSECTION_LOADING_EVENTS","ELEMENT_STYLE","styleSheet","OBSERVED_ATTRIBUTES","Element","HTMLElement","static","Map","version","observedAttributes","setIconLoader","loader","_iconLoader","setPlayerFactory","_playerFactory","defineTrigger","name","triggerClass","_definedTriggers","set","_root","_isConnected","_isReady","_assignedIconData","_loadedIconData","_triggerInstance","_playerInstance","delayedLoading","attributeChangedCallback","oldValue","newValue","this","call","connectedCallback","createElements","loading","intersectionObserver","cancel","unobserve","undefined","createPlayer","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","observe","interactionEvent","eventName","targetElement","removeEventListener","intersectionCallback","then","dispatchEvent","Event","target","closest","event","bind","addEventListener","disconnectedCallback","destroyPlayer","attachShadow","mode","replaceSync","adoptedStyleSheets","style","document","createElement","innerHTML","appendChild","container","classList","add","slot","Error","iconData","loadIconData","animationContainer","state","parseState","stroke","parseStroke","colors","parseColors","Object","styleContent","key","connect","onReady","refresh","onRefresh","onComplete","onFrame","triggerChanged","Promise","resolve","reject","isReady","CustomEvent","onDisconnected","disconnect","icon","src","response","fetch","json","movePaletteToCssVariables","setProperty","removeProperty","targetChanged","loadingChanged","pause","trigger","TriggerClass","get","onConnected","colorsChanged","strokeChanged","stateChanged","iconChanged","srcChanged","isObjectLike","hasAttribute","removeAttribute","oldIconData","setAttribute","getAttribute","param","playerInstance","triggerInstance","lastElementChild","DEFAULT_LOTTIE_WEB_OPTIONS","renderer","loop","autoplay","rendererSettings","preserveAspectRatio","progressiveLoad","hideOnTransparent","createColorsProxy","Proxy","property","receiver","updateProperties","lottie","rawProperties","resetProperties","current","data","lottieColorToHex","deleteProperty","ownKeys","has","getOwnPropertyDescriptor","enumerable","configurable","Player","_animationLoader","_container","_iconData","_initial","_options","_lottie","_colorsProxy","_direction","_speed","_rawProperties","_eventCallbacks","_state","_states","constructor","animationLoader","initial","options","markers","partA","partB","cm","newState","time","tm","duration","dr","default","includes","isNil","fixedParams","initialOptions","initialSegment","firstState","lastState","ip","op","animationData","assign","deepClone","triggerEvent","params","isLoaded","destroy","remove","callback","push","len","splice","args","callbacks","renderFrame","play","setDirection","playFromBeginning","playSegments","goToAndPlay","stop","goToFrame","frame","goToAndStop","goToFirstFrame","goToLastFrame","max","frames","properties","result","newStroke","isPlaying","setSegment","resetSegments","speed","setSpeed","direction","min","currentFrame","states","isPaused","getDuration","lottieInstance","layers","nm","ef","v","k","mn","readProperties","Boomerang","player","element","onHover","CLICK_EVENTS","passive","Click","onClick","Hover","In","playTimeout","played","resetIntersectionObserver","resetPlayDelayTimer","delay","setTimeout","clearTimeout","Loop","LoopOnHover","mouseIn","onMouseEnter","onMouseLeave","Morph","NUMBER_REGEX","MUTATION_OBSERVER_CONFIG","attributes","childList","subtree","Sequence","sequenceIndex","frameState","frameDelayFirst","frameDelayLast","timer","MutationObserver","mutationList","mutation","attributeName","reset","step","takeStep","steps","sequence","action","handleStep","frameIndex","match","defineElement","customElements","define"],"mappings":"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"}